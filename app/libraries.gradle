ext {

    architecture = [
        lifecycle           : "android.arch.lifecycle:extensions:$architectureVersion",
        lifecycleCompiler   : "android.arch.lifecycle:compiler:$architectureVersion",
        paging              : "android.arch.paging:runtime:$architecturePagingVersion",
        room                : "android.arch.persistence.room:runtime:$architectureVersion",
        roomCompiler        : "android.arch.persistence.room:compiler:$architectureVersion",
        roomTesting         : "android.arch.persistence.room:testing:$architectureVersion",
        coreTesting         : "android.arch.core:core-testing:$architectureVersion"
    ]

    appCompat = [
        base                : "com.android.support:appcompat-v7:$appCompatVersion",
        cardview            : "com.android.support:cardview-v7:$appCompatVersion",
        design              : "com.android.support:design:$appCompatVersion",
        gridlayout          : "com.android.support:gridlayout-v7:$appCompatVersion",
        leanback            : "com.android.support:leanback-v17:$appCompatVersion",
        mediarouter         : "com.android.support:mediarouter-v7:$appCompatVersion",
        palette             : "com.android.support:palette-v7:$appCompatVersion",
        recyclerview        : "com.android.support:recyclerview-v7:$appCompatVersion",
        supportAnnotations  : "com.android.support:support-annotations:$appCompatVersion",
        supportV13          : "com.android.support:support-v13:$appCompatVersion",
        supportV4           : "com.android.support:support-v4:$appCompatVersion"
    ]

    avLoading = [
        base                : "com.wang.avi:library:$avLoadingVersion"
    ]

    calligraphy = [
        base                : "uk.co.chrisjenx:calligraphy:$calligraphyVersion"
    ]

    dagger = [
        base                : "com.google.dagger:dagger:$daggerVersion",
        compiler            : "com.google.dagger:dagger-compiler:$daggerVersion",
        android             : "com.google.dagger:dagger-android:$daggerVersion",
        androidProcessor    : "com.google.dagger:dagger-android-processor:$daggerVersion",
        androidSupport      : "com.google.dagger:dagger-android-support:$daggerVersion"
    ]

    dataBinding = [
        compiler            : "com.android.databinding:compiler:$dataBindingVersion"
    ]

    espresso = [
        core                : "com.android.support.test.espresso:espresso-core:$espressoVersion"
    ]

    glide = [
        base                : "com.github.bumptech.glide:glide:$glideVersion",
        compiler            : "com.github.bumptech.glide:compiler:$glideVersion"
    ]

    google = [
        auth                : "com.google.android.gms:play-services-auth:$googleAuthVersiom"
    ]

    gson = [
        base                : "com.google.code.gson:gson:$gsonVersion"
    ]

    imageCropper = [
        base                : "com.theartofdev.edmodo:android-image-cropper:$imageCropperVersion"
    ]

    jUnit = [
        base                : "junit:junit:$jUnitVersion"
    ]

    kotlin = [
        base                : "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlinVersion"
    ]

    massiveDisaster = [
        afm                 : "com.massivedisaster:afm:$afmVersion",
        adal                : "com.massivedisaster.adal:adal:$adalVersion",
        adalAccounts        : "com.massivedisaster.adal:adal-accounts:$adalVersion",
        adalAdapters        : "com.massivedisaster.adal:adal-adapters:$adalVersion",
        adalAlarm           : "com.massivedisaster.adal:adal-alarm:$adalVersion",
        adalAnalytics       : "com.massivedisaster.adal:adal-analytics:$adalVersion",
        adalAppState        : "com.massivedisaster.adal:adal-application-state:$adalVersion",
        adalBus             : "com.massivedisaster.adal:adal-bus:$adalVersion",
        adalFragments       : "com.massivedisaster.adal:adal-fragments:$adalVersion",
        adalLocation        : "com.massivedisaster.adal:adal-location:$adalVersion",
        adalNetwork         : "com.massivedisaster.adal:adal-network:$adalVersion",
        adalPermissions     : "com.massivedisaster.adal:adal-permissions:$adalVersion",
        adalUtils           : "com.massivedisaster.adal:adal-utils:$adalVersion"
    ]

    mockito = [
        base                : "org.mockito:mockito-core:$mockitoVersion"
    ]

    okHttp = [
        logging             : "com.squareup.okhttp3:logging-interceptor:$loggingOkHttpVersion"
    ]

    retrofit = [
        base                : "com.squareup.retrofit2:retrofit:$retrofitVersion",
        gsonConverter       : "com.squareup.retrofit2:converter-gson:$retrofitVersion",
        rxAdapter           : "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"
    ]

    rx = [
        android             : "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion",
        kotlin              : "io.reactivex.rxjava2:rxkotlin:$rxKotlinVersion"
    ]
}
